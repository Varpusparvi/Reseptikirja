package testit;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

import reseptikirja.Aines;
import reseptikirja.Lukija;
import reseptikirja.Ohje;
import reseptikirja.Resepti;
import reseptikirja.Reseptikirja;

/**
 * Test class made by ComTest
 * @version 2018.04.17 14:38:40 // Generated by ComTest
 *
 */
public class ReseptiTest {



  // Generated by ComTest BEGIN
  /** testGetReseptiId55 */
  @Test
  public void testGetReseptiId55() {    // Resepti: 55
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    assertEquals("From: Resepti line: 66", 1, reseptikirja.getReseptitLuokka().getReseptit()[0].getReseptiId()); 
    assertEquals("From: Resepti line: 67", 2, reseptikirja.getReseptitLuokka().getReseptit()[1].getReseptiId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetReseptiNimi79 */
  @Test
  public void testGetReseptiNimi79() {    // Resepti: 79
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    assertEquals("From: Resepti line: 90", "spydäri", reseptikirja.getReseptitLuokka().getReseptit()[0].getReseptiNimi()); 
    assertEquals("From: Resepti line: 91", "keitto", reseptikirja.getReseptitLuokka().getReseptit()[1].getReseptiNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetArvostelu103 */
  @Test
  public void testGetArvostelu103() {    // Resepti: 103
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    reseptikirja.getReseptitLuokka().getReseptit()[1].setArvostelu(3); 
    assertEquals("From: Resepti line: 116", -1, reseptikirja.getReseptitLuokka().getReseptit()[0].getArvostelu()); 
    assertEquals("From: Resepti line: 117", 3, reseptikirja.getReseptitLuokka().getReseptit()[1].getArvostelu()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetOhje129 */
  @Test
  public void testGetOhje129() {    // Resepti: 129
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    Ohje ohje1 = new Ohje(reseptikirja.getOhjeetLuokka()); 
    Ohje ohje2 = new Ohje(reseptikirja.getOhjeetLuokka()); 
    ohje1.setOhje("Ohje"); 
    ohje2.setOhje("Hyvä"); 
    reseptikirja.getReseptitLuokka().getReseptit()[1].setOhje(1); 
    assertEquals("From: Resepti line: 147", -1, reseptikirja.getReseptitLuokka().getReseptit()[0].getOhje()); 
    assertEquals("From: Resepti line: 148", 1, reseptikirja.getReseptitLuokka().getReseptit()[1].getOhje()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAineslista160 */
  @Test
  public void testGetAineslista160() {    // Resepti: 160
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    resepti2.setAines(0,aines1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    assertEquals("From: Resepti line: 173", "[]", String.valueOf(resepti1.getAineslista())); 
    assertEquals("From: Resepti line: 174", "[1]", String.valueOf(resepti2.getAineslista())); 
    resepti2.setAines(1,aines1); 
    assertEquals("From: Resepti line: 176", "[1, 1]", String.valueOf(resepti2.getAineslista())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetReseptiId188 */
  @Test
  public void testSetReseptiId188() {    // Resepti: 188
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    assertEquals("From: Resepti line: 197", 1, resepti1.getReseptiId()); 
    resepti1.setReseptiId(6); 
    assertEquals("From: Resepti line: 199", 6, resepti1.getReseptiId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetReseptiNimi211 */
  @Test
  public void testSetReseptiNimi211() {    // Resepti: 211
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    assertEquals("From: Resepti line: 220", "spydäri", resepti1.getReseptiNimi()); 
    resepti1.setReseptiNimi("Kala"); 
    assertEquals("From: Resepti line: 222", "Kala", resepti1.getReseptiNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetArvostelu234 */
  @Test
  public void testSetArvostelu234() {    // Resepti: 234
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    assertEquals("From: Resepti line: 243", -1, resepti1.getArvostelu()); 
    resepti1.setArvostelu(5); 
    assertEquals("From: Resepti line: 245", 5, resepti1.getArvostelu()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetAines258 */
  @Test
  public void testSetAines258() {    // Resepti: 258
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    assertEquals("From: Resepti line: 268", "[]", String.valueOf(resepti2.getAineslista())); 
    resepti2.setAines(0,aines1); 
    assertEquals("From: Resepti line: 270", "[1]", String.valueOf(resepti2.getAineslista())); 
    resepti2.setAines(1,aines1); 
    assertEquals("From: Resepti line: 272", "[1, 1]", String.valueOf(resepti2.getAineslista())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetOhje288 */
  @Test
  public void testSetOhje288() {    // Resepti: 288
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    assertEquals("From: Resepti line: 297", -1, resepti1.getOhje()); 
    resepti1.setOhje(55); 
    assertEquals("From: Resepti line: 299", 55, resepti1.getOhje()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToStringTallennus311 */
  @Test
  public void testToStringTallennus311() {    // Resepti: 311
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    Resepti resepti2 = new Resepti(reseptikirja.getReseptitLuokka(), "keitto"); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"makkara"); 
    resepti1.setAines(0, aines1); 
    resepti1.setAines(1, aines2); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti2); 
    Ohje ohje1 = new Ohje(reseptikirja.getOhjeetLuokka()); 
    Ohje ohje2 = new Ohje(reseptikirja.getOhjeetLuokka()); 
    ohje1.setOhje("Ohje"); 
    ohje2.setOhje("Hyvä"); 
    reseptikirja.getReseptitLuokka().getReseptit()[1].setOhje(1); 
    reseptikirja.getReseptitLuokka().getReseptit()[1].setArvostelu(3); 
    assertEquals("From: Resepti line: 337", "1|spydäri|-1|-1|[1, 2]", reseptikirja.getReseptitLuokka().getReseptit()[0].toStringTallennus()); 
    assertEquals("From: Resepti line: 338", "2|keitto|3|1|[]", reseptikirja.getReseptitLuokka().getReseptit()[1].toStringTallennus()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString355 */
  @Test
  public void testToString355() {    // Resepti: 355
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    assertEquals("From: Resepti line: 364", "spydäri", resepti1.toString()); 
    resepti1.setReseptiNimi("Pallo"); 
    assertEquals("From: Resepti line: 366", "Pallo", resepti1.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParseResepti379 */
  @Test
  public void testParseResepti379() {    // Resepti: 379
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti1 = new Resepti(reseptikirja.getReseptitLuokka(), "spydäri"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti1); 
    resepti1.parseResepti("5|Kakku|5|4|[]"); 
    assertEquals("From: Resepti line: 389", "5|Kakku|5|4|[]", resepti1.toStringTallennus()); 
    resepti1.parseResepti("5777|Kakku13|5|47777|[1, 5, 555, 99999, 2324]"); 
    assertEquals("From: Resepti line: 392", "5777|Kakku13|5|47777|[1, 5, 555, 99999, 2324]", resepti1.toStringTallennus()); 
  } // Generated by ComTest END
}