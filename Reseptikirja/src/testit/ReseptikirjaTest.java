package testit;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

import reseptikirja.Aines;
import reseptikirja.Lukija;
import reseptikirja.Ohje;
import reseptikirja.Resepti;
import reseptikirja.Reseptikirja;

/**
 * Test class made by ComTest
 * @version 2018.04.16 23:33:33 // Generated by ComTest
 *
 */
public class ReseptikirjaTest {



  // Generated by ComTest BEGIN
  /** testGetReseptinAinesLista63 */
  @Test
  public void testGetReseptinAinesLista63() {    // Reseptikirja: 63
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti = new Resepti(reseptikirja.getReseptitLuokka(), "Perunamuussi"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti); 
    Aines peruna = new Aines(reseptikirja.getAineksetLuokka(), "Peruna"); 
    Aines vesi = new Aines(reseptikirja.getAineksetLuokka(), "Vesi"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(peruna); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(vesi); 
    resepti.setAines(0, peruna); 
    resepti.setAines(1, vesi); 
    assertEquals("From: Reseptikirja line: 79", "[Peruna, Vesi]", reseptikirja.getReseptinAinesLista(resepti).toString()); 
    lukija.poistaTiedostot(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetReseptinOhje104 */
  @Test
  public void testGetReseptinOhje104() {    // Reseptikirja: 104
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti = new Resepti(reseptikirja.getReseptitLuokka(), "Perunamuussi"); 
    reseptikirja.getReseptitLuokka().lisaaReseptiTaulukkoon(resepti); 
    Ohje ohje = new Ohje(reseptikirja.getOhjeetLuokka()); 
    ohje.setOhje("Keitä!"); 
    resepti.setOhje(ohje.getOhjeId()); 
    assertEquals("From: Reseptikirja line: 116", 1, resepti.getOhje()); 
    ohje = new Ohje(reseptikirja.getOhjeetLuokka()); 
    ohje.setOhje("Keitä2!"); 
    resepti.setOhje(ohje.getOhjeId()); 
    assertEquals("From: Reseptikirja line: 122", 2, resepti.getOhje()); 
    lukija.poistaTiedostot(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAinesIdsta147 */
  @Test
  public void testGetAinesIdsta147() {    // Reseptikirja: 147
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines = new Aines(reseptikirja.getAineksetLuokka(), "Peruna"); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(), "Liha"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(), "Vesi"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Reseptikirja line: 159", "Peruna", reseptikirja.getAinesIdsta(1).toString()); 
    assertEquals("From: Reseptikirja line: 160", "Liha", reseptikirja.getAinesIdsta(2).toString()); 
    assertEquals("From: Reseptikirja line: 161", "Vesi", reseptikirja.getAinesIdsta(3).toString()); 
    assertEquals("From: Reseptikirja line: 162", 1, aines.getAinesId()); 
    assertEquals("From: Reseptikirja line: 163", 2, aines1.getAinesId()); 
    assertEquals("From: Reseptikirja line: 164", 3, aines2.getAinesId()); 
    lukija.poistaTiedostot(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetReseptinArvostelu185 */
  @Test
  public void testGetReseptinArvostelu185() {    // Reseptikirja: 185
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Resepti resepti = new Resepti(reseptikirja.getReseptitLuokka(), "Makkarakeitto"); 
    assertEquals("From: Reseptikirja line: 191", "-1", reseptikirja.getReseptinArvostelu(resepti)); 
    resepti.setArvostelu(5); 
    assertEquals("From: Reseptikirja line: 193", "5", reseptikirja.getReseptinArvostelu(resepti)); 
    lukija.poistaTiedostot(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnalysoiGLV212 */
  @Test
  public void testAnalysoiGLV212() {    // Reseptikirja: 212
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja rk = new Reseptikirja(); 
    Resepti r = new Resepti(rk.getReseptitLuokka(), "Makkarakeitto"); 
    rk.getReseptitLuokka().lisaaReseptiTaulukkoon(r); 
    Aines a1 = new Aines(rk.getAineksetLuokka(), "Peruna"); 
    Aines a2 = new Aines(rk.getAineksetLuokka(), "Makkara"); 
    rk.getAineksetLuokka().lisaaAinesTaulukkoon(a1); 
    rk.getAineksetLuokka().lisaaAinesTaulukkoon(a2); 
    r.setAines(0, a1); 
    r.setAines(1, a2); 
    assertEquals("From: Reseptikirja line: 228", "Gluteenia, Laktoosia, Ei vegaaninen", rk.analysoiGLV(r)); 
    a1.setGluteeniton(true); 
    a1.setLaktoositon(true); 
    a2.setGluteeniton(true); 
    a2.setLaktoositon(true); 
    assertEquals("From: Reseptikirja line: 234", "Ei vegaaninen", rk.analysoiGLV(r)); 
    a2.setVegaaninen(true); 
    assertEquals("From: Reseptikirja line: 236", "Ei vegaaninen", rk.analysoiGLV(r)); 
    a1.setVegaaninen(true); 
    assertEquals("From: Reseptikirja line: 238", "", rk.analysoiGLV(r)); 
    lukija.poistaTiedostot(); 
  } // Generated by ComTest END
}