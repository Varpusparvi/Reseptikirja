package testit;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import reseptikirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2018.04.18 19:03:45 // Generated by ComTest
 *
 */
public class AinesTest {



  // Generated by ComTest BEGIN
  /** testGetAinesId73 */
  @Test
  public void testGetAinesId73() {    // Aines: 73
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"kaali"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Aines line: 82", 1, reseptikirja.getAineksetLuokka().getAinekset()[0].getAinesId()); 
    assertEquals("From: Aines line: 83", 2, reseptikirja.getAineksetLuokka().getAinekset()[1].getAinesId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetAinesNimi95 */
  @Test
  public void testGetAinesNimi95() {    // Aines: 95
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"kaali"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Aines line: 104", "peruna", reseptikirja.getAineksetLuokka().getAinekset()[0].getAinesNimi()); 
    assertEquals("From: Aines line: 105", "kaali", reseptikirja.getAineksetLuokka().getAinekset()[1].getAinesNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetVegaaninen117 */
  @Test
  public void testGetVegaaninen117() {    // Aines: 117
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1= new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"kaali"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Aines line: 126", false, reseptikirja.getAineksetLuokka().getAinekset()[0].getVegaaninen()); 
    assertEquals("From: Aines line: 127", false, reseptikirja.getAineksetLuokka().getAinekset()[1].getVegaaninen()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetLaktoositon141 */
  @Test
  public void testGetLaktoositon141() {    // Aines: 141
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"kaali"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Aines line: 150", false, reseptikirja.getAineksetLuokka().getAinekset()[0].getLaktoositon()); 
    assertEquals("From: Aines line: 151", false, reseptikirja.getAineksetLuokka().getAinekset()[1].getLaktoositon()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetGluteeniton163 */
  @Test
  public void testGetGluteeniton163() {    // Aines: 163
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"kaali"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Aines line: 172", false, reseptikirja.getAineksetLuokka().getAinekset()[0].getGluteeniton()); 
    assertEquals("From: Aines line: 173", false, reseptikirja.getAineksetLuokka().getAinekset()[1].getGluteeniton()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetAinesId187 */
  @Test
  public void testSetAinesId187() {    // Aines: 187
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    assertEquals("From: Aines line: 195", 1, aines1.getAinesId()); 
    aines1.setAinesId(4444); 
    assertEquals("From: Aines line: 197", 4444, aines1.getAinesId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetAinesNimi209 */
  @Test
  public void testSetAinesNimi209() {    // Aines: 209
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"peruna"); 
    assertEquals("From: Aines line: 217", 1, aines1.getAinesId()); 
    aines1.setAinesNimi("kurkku"); 
    assertEquals("From: Aines line: 219", "kurkku", aines1.getAinesNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetVegaaninen231 */
  @Test
  public void testSetVegaaninen231() {    // Aines: 231
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"porkkana"); 
    assertEquals("From: Aines line: 239", 1, aines1.getAinesId()); 
    aines1.setVegaaninen(true); 
    assertEquals("From: Aines line: 241", true, aines1.getVegaaninen()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetLaktoositon253 */
  @Test
  public void testSetLaktoositon253() {    // Aines: 253
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"laktoositon maito"); 
    assertEquals("From: Aines line: 261", 1, aines1.getAinesId()); 
    aines1.setLaktoositon(true); 
    assertEquals("From: Aines line: 263", true, aines1.getLaktoositon()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetGluteeniton275 */
  @Test
  public void testSetGluteeniton275() {    // Aines: 275
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"gluteeniton maito"); 
    assertEquals("From: Aines line: 283", 1, aines1.getAinesId()); 
    aines1.setGluteeniton(true); 
    assertEquals("From: Aines line: 285", true, aines1.getGluteeniton()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToStringTallennus297 */
  @Test
  public void testToStringTallennus297() {    // Aines: 297
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"1|vesi|true|true|true"); 
    Aines aines2 = new Aines(reseptikirja.getAineksetLuokka(),"2|pasta|true|true|false"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines2); 
    assertEquals("From: Aines line: 306", "1|vesi|true|true|true", reseptikirja.getAineksetLuokka().getAinekset()[0].toString()); 
    assertEquals("From: Aines line: 307", "2|pasta|true|true|false", reseptikirja.getAineksetLuokka().getAinekset()[1].toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString322 */
  @Test
  public void testToString322() {    // Aines: 322
    Reseptikirja reseptikirja = new Reseptikirja(); 
    Aines aines1 = new Aines(reseptikirja.getAineksetLuokka(),"1|kaali|true|true|true"); 
    reseptikirja.getAineksetLuokka().lisaaAinesTaulukkoon(aines1); 
    assertEquals("From: Aines line: 329", "1|kaali|true|true|true", reseptikirja.getAineksetLuokka().getAinekset()[0].toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParseAines341 */
  @Test
  public void testParseAines341() {    // Aines: 341
    Lukija lukija = new Lukija(); 
    lukija.poistaTiedostot(); 
    Reseptikirja rk = new Reseptikirja(); 
    Aines aines = new Aines(rk.getAineksetLuokka(), "kaali"); 
    assertEquals("From: Aines line: 348", "1|kaali|false|false|false", aines.toStringTallennus()); 
    aines.parseAines("13|kaali|true|true|true"); 
    assertEquals("From: Aines line: 350", "13|kaali|true|true|true", aines.toStringTallennus()); 
  } // Generated by ComTest END
}